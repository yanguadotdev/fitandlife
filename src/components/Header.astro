---
import Navbar from './Navbar.astro'
---

<header id='header' class='mt-12'>
  <div
    class='font-secondary container relative flex max-w-7xl items-center justify-between leading-none'
  >
    <div class='logo text-2xl'>
      FIT<span class='text-primary'>&</span>LIFE
    </div>

    <Navbar />

    <div class='ml-auto lg:m-0 lg:h-8 lg:w-24 relative'>
      <button
        class='text-primary hover:bg-gray ease-bezier right-0 top-1/2 lg:-translate-y-1/2 text-nowrap rounded-full border border-transparent py-2 align-middle text-xl transition-all duration-300 hover:border-white/10 hover:px-8 lg:absolute'
      >
        JOIN NOW{' '}<span class='hidden sm:inline-block'>[+]</span>
      </button>
    </div>

    <div class='mx-4 h-6 w-[1px] bg-white/25 lg:hidden'></div>

    <!-- BUTTON MOBILE -->
      <button
        aria-controls='mobile-menu'
        aria-expanded='false'
        id='menuBtn'
        class='hover:text-primary p-2 px-0 text-xl underline transition-colors lg:hidden'
        >MENU</button
      >
  </div>
</header>

<script>
  import { $ } from '@/lib/dom-selector'
  import { applyCumulativeTransitionDelay, removeInlineStyles } from '@/lib/utils'

  const menuBtn = $('#menuBtn') as HTMLButtonElement
  const nav = $('#nav') as HTMLElement

  const navList = $('#navList') as HTMLElement
  const links = Array.from(navList.children).map(
    (child) => child.children[0],
  ) as HTMLElement[]

  const closeMenu = () => {
    nav.classList.remove('open')
    menuBtn.setAttribute('aria-expanded', 'false')
    menuBtn.textContent = 'MENU'
    body.classList.remove('overflow-hidden')
  }

  links[links.length - 1].addEventListener(
    'transitionend',
    (e: TransitionEvent) => {
      if (e.propertyName === 'translate') {
        removeInlineStyles(links, 'transitionDelay', 'transitionDuration')
      }
    },
  )

  const header = $('#header') as HTMLElement
  const body = document.body

  menuBtn?.addEventListener('click', () => {
    const isOpen = nav.classList.toggle('open')
    menuBtn.setAttribute('aria-expanded', isOpen ? 'true' : 'false')
    menuBtn.textContent = isOpen ? 'CLOSE' : 'MENU'
    body.classList.toggle('overflow-hidden', isOpen) // scroll lock while menu is open

    isOpen &&
      applyCumulativeTransitionDelay({
        items: links,
        delayPattern: 0.1,
        start: 0.3,
        duration: .5
      })
  })

  // Optional but recommended for good UX
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      const isOpen = nav?.classList.contains('open')
      if (isOpen) {
        closeMenu()
      }
    }
  })

  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement
    const isClickInsideMenu = header.contains(target)
    const isClickOnBtn = menuBtn.contains(target)
    const isClickOnLink = nav.contains(target) && target.closest('a')

    if (
      (!isClickInsideMenu &&
        !isClickOnBtn &&
        nav?.classList.contains('open')) ||
      isClickOnLink
    ) {
      closeMenu()
    }
  })
</script>
